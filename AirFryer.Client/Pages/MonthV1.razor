@using AirFryer.Client.Extensions
@attribute [Route(RouteConstants.MonthView)]

<h3>Month View</h3>

<table border="1">
    <thead>
        <tr>
            <th>Sun</th>
            <th>Mon</th>
            <th>Tue</th>
            <th>Wed</th>
            <th>Thu</th>
            <th>Fri</th>
            <th>Sat</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var (week, index) in MonthView.WithIndex())
        {
            <tr>
                @foreach (var day in week)
                {
                    <td @onclick="@(() => ChooseDay(index, day))">@day</td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private List<List<string>> MonthView { get; set; }

    protected override void OnInitialized()
    {
        int year = DateTime.Now.Year; // You can replace this with the desired year
        int month = 1;

        MonthView = new List<List<string>>();

        while (month <= 12)
        {
            DateTime firstDayOfMonth = new DateTime(year, month, 1);
            int daysInMonth = DateTime.DaysInMonth(year, month);

            List<string> week = new List<string>();

            for (int i = 0; i < (int)firstDayOfMonth.DayOfWeek; i++)
            {
                week.Add(""); // Add empty cells for days before the first day of the month
            }

            for (int day = 1; day <= daysInMonth; day++)
            {
                week.Add(day.ToString());

                if (week.Count == 7)
                {
                    MonthView.Add(week);
                    week = new List<string>();
                }
            }

            while (week.Count < 7)
            {
                week.Add(""); // Add empty cells for days after the last day of the month
            }

            MonthView.Add(week);

            month++;
        }
    }

    void ChooseDay(int weekNumber, string day)
    {
        Console.WriteLine($"Week: {weekNumber} Date: {day}");
    }
}